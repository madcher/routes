{"version":3,"sources":["components/Header.js","components/Map.js","serviceWorker.js","components/Content.js","components/Auth.js","services/service.js","App.js","index.js"],"names":["Header","setToken","className","onClick","MapComponent","useEffect","L","window","mymap","map","setView","tileLayer","attribution","addTo","Routing","control","addWaypoints","draggableWaypoints","fitSelectedRoutes","collapsible","show","waypoints","latLng","id","workerFunction","blob","Blob","this","onmessage","data","wsConnection","WebSocket","onopen","postMessage","hint","onclose","event","wasClean","code","reason","evt","message","onerror","error","replace","blobURL","URL","webkitURL","createObjectURL","type","Content","myWorker","Worker","addThis","num1","num2","alert","console","log","Notification","permission","requestPermission","Map","Auth","useState","setError","onSubmit","e","preventDefault","FormData","target","login","get","password","fetch","method","headers","body","JSON","stringify","then","res","ok","status","Error","json","result","token","catch","err","loginFunc","placeholder","name","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1dc5e02c.chunk.js","sourcesContent":["import React from 'react';\n// шапка страницы\nconst Header = ({setToken}) => {\n    return (\n        <div className=\"header\">\n            <div className=\"header__label\">Route Tracker</div>\n            <div><button className=\"header__logout\" onClick={() => setToken(false)}>Log out</button></div>\n        </div>\n    );\n}\n\nexport default Header;","import React, {useEffect} from 'react';\n\nconst MapComponent = () => {\n    useEffect(() => {\n        const L = window.L;\n        const mymap = L.map('mapid').setView([55.755826, 37.6173], 13);\n        // url of tiles z - zoom , x - latitude, y - longitude\n        const tileUrl = 'https://cartodb-basemaps-{s}.global.ssl.fastly.net/light_all/{z}/{x}/{y}.png';\n        // tiles\n        const tiles = L.tileLayer(tileUrl, {attribution: 'mymap'});\n        tiles.addTo(mymap);\n        L.Routing.control({      addWaypoints: false,\n            draggableWaypoints: false,\n            fitSelectedRoutes: false,\n            collapsible: false,\n            show: false,\n            waypoints: [\n                L.latLng(55.755826, 37.6173),\n                L.latLng(55.855826, 37.8173),\n                L.latLng(55.955826, 37.9179)\n            ]\n        }).addTo(mymap);\n    }, []);\n    return (\n        <div id=\"mapid\"></div>\n    );\n};\n\nexport default MapComponent;","function workerFunction() {\n    var self = this;\n    self.onmessage = function({data}) {\n        const wsConnection = new WebSocket(\"ws://localhost:8888\");\n    \n        // web socket\n        wsConnection.onopen = function() {\n            postMessage({hint: 'Соединение установлено'});\n        };\n    \n        wsConnection.onclose = function(event) {\n            if (event.wasClean) {\n                postMessage({hint: 'Соединение закрыто чисто'});\n            } else {\n                // например, \"убит\" процесс сервера\n                postMessage({hint: 'Обрыв соединения'});\n            }\n            postMessage({hint: 'Код: ' + event.code + ' причина: ' + event.reason});\n        };\n    \n        wsConnection.onmessage = evt => {\n            // отправляем сообщение в основной поток\n            postMessage({message: evt.data});\n        }\n    \n        wsConnection.onerror = function(error) {\n            postMessage({error: \"Ошибка \" + error.message});\n        };\n    }\n}\n\nexport default workerFunction;\n\n\n\n\n\n","import React, {useEffect} from 'react';\nimport Map from './Map';\nimport workerFunction from '../serviceWorker';\n\nvar dataObj = '(' + workerFunction + ')();'; // here is the trick to convert the above fucntion to string\nvar blob = new Blob([dataObj.replace('\"use strict\";', '')]); // firefox adds \"use strict\"; to any function which might block worker execution so knock it off\n\nvar blobURL = (window.URL ? window.URL : window.webkitURL).createObjectURL(blob, {\n    type: 'application/javascript; charset=utf-8'\n});\n\n// содержания страницы\nconst Content = () => {\n    useEffect(() => {\n        const myWorker = new Worker(blobURL);\n        //const myWorker = new Worker('serviceWorker.js');\n        const message = { addThis: {num1: 1, num2: 10} };\n        myWorker.postMessage(message);\n        myWorker.onmessage = ({data}) => {\n            const {error, hint, message} = data;\n            if (error) {\n                alert(error);\n            }\n            if (hint) {\n                console.log(hint);\n            }\n            if (message) {\n                console.log(message);\n                // создаем уведомление\n                if (Notification.permission === \"granted\") {\n                    // Если разрешено, то создаем уведомление\n                    var notification = new Notification(message);\n                } else if (Notification.permission !== 'denied') {\n                    Notification.requestPermission(function (permission) {\n                        // Если пользователь разрешил, то создаем уведомление\n                        if (permission === \"granted\") {\n                            var notification = new Notification(message);\n                        }\n                    });\n                }\n            }\n        }\n        \n    }, []);\n\n    return (\n        <div className=\"content\">\n            <div className=\"map-menu\">\n                <div>New point</div>\n                <div>\n                    <button type=\"button\" className=\"auth__input auth_button\" onClick={() => {}}>Add point</button>\n                </div>\n            </div>\n            <div className=\"center-menu\">\n                <div>Go to center</div>\n                <div>\n                    <button type=\"button\" className=\"auth__input auth_button\" onClick={() => {}}>go</button>\n                </div>\n            </div>\n            <Map/>\n        </div>\n    );\n}\n\nexport default Content;","// страница авторизации\nimport React, {useEffect, useState} from 'react';\nimport { loginFunc } from '../services/service';\n\nconst Auth = ({setToken}) => {\nconst [error, setError] = useState(false);\nconst submitHandler = (e) => {\n    e.preventDefault();\n    loginFunc(e, setToken, setError)\n};\n\nreturn(<div className=\"auth__container\">\n        <form className=\"auth__form\" onSubmit={submitHandler}>\n            <label className=\"auth__label\">Login</label>\n            <input className=\"auth__input\" type=\"text\" placeholder=\"login\" name=\"login\"/>\n            <label className=\"auth__label\">Password</label>\n            <input className=\"auth__input\" type=\"password\" placeholder=\"\" name=\"password\"/>\n            {error && <div className=\"auth_error\">Invalid login or password</div>}\n            <button type=\"submit\" className=\"auth__input auth_button\">Submit</button>\n        </form>\n    </div>);\n}\n\nexport default Auth;","// функция авторизации\nexport const loginFunc = (e, setToken, setError) => {\n    const data = new FormData(e.target);\n    const login = data.get('login');\n    const password = data.get('password');\n    console.log(login, password);\n    fetch('/api/authorization', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json;charset=utf-8'\n        },\n        body: JSON.stringify({ login, password }),\n    }).then(res => {\n        if (!res.ok) {\n            console.log(\"HTTP status \" + res.status);\n            throw Error;\n        }\n        return res.json();\n    }).then(result => {\n        setToken(result.token);\n        setError(false);\n    }).catch(err => {\n        setError(true);\n        console.log(err)\n    });\n};\n\n// получение курсов\nexport const getCourse = (setCourses, token) => {\n    fetch('/api/get-courses', {\n        method: 'GET',\n        headers: {'token': token}\n    }).then(response => response.json()).then(data => {\n        setCourses(data);\n    }).catch(err => console.log(err));\n}\n// добавление курсов\nexport const addCourse = (query, setCourses, token) => {\n    fetch('/api/add-course', {\n        method: 'POST',\n        headers: {'token': token, 'Content-Type': 'application/json;charset=utf-8'},\n        body: JSON.stringify(query)\n    }).then(res => {\n        getCourse(setCourses, token);\n    }).catch(err => console.log(err));\n}\n// удаление курса\nexport const deleteCourse = (courseName, setCourses, token) => {\n    fetch('/api/delete-course', {\n        method: 'DELETE',\n        headers: {'token': token, 'Content-Type': 'application/json;charset=utf-8'},\n        body: JSON.stringify({courseName})\n    }).then(res => {\n        getCourse(setCourses, token);\n    }).catch(err => console.log(err));\n}","import React, { useState } from 'react';\nimport Header from './components/Header';\nimport Content from './components/Content';\nimport Auth from './components/Auth';\n\n// компонент приложения\nconst App = () => {\n    const [token, setToken] = useState(null);\n    if (!token) {\n        return (<Auth setToken={setToken} />)\n    }\n    return(<div>\n            <Header setToken={setToken}/>\n            <Content token={token}/>\n        </div>);\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}